//
//  MenuPresenter.swift
//  CashkaChoffe
//
//  Created by Vlad Ralovich on 11.02.2024.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation

final class MenuPresenter {
    
    // MARK: - Private properties -

    private unowned let view: MenuViewInterface
    private let interactor: MenuInteractorInterface
    private let wireframe: MenuWireframeInterface
    
    private var items: CoffeeModels = []

    // MARK: - Lifecycle -

    init(view: MenuViewInterface, interactor: MenuInteractorInterface, wireframe: MenuWireframeInterface) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
        
        interactor.getMenu { result in
            DispatchQueue.main.async {
                switch result {
                case .success(let success):
                    print("#debug success = \(success)")
                    self.items = success
                    view.reloadData()
                case .failure(let failure):
                    print("#debug failure = \(failure.localizedDescription)")
                }
            }
        }
    }
}

// MARK: - Extensions -

extension MenuPresenter: MenuPresenterInterface {
    var numberOfItems: Int {
        items.count
    }
    
    func item(at indexPath: IndexPath) -> CoffeeModel {
        items[indexPath.row]
    }
    
    func didSelectItem(at indexPath: IndexPath) {
        print("#debug didSelectItem = \(item(at: indexPath))")
    }
    
    func mainButtonAction() {
        wireframe.openOrder()
    }
    
}
