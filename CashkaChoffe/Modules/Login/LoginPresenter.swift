//
//  LoginPresenter.swift
//  CashkaChoffe
//
//  Created by Vlad Ralovich on 08.02.2024.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation

final class LoginPresenter {
    
    // MARK: - Private properties -

    private unowned let view: LoginViewInterface
    private let interactor: LoginInteractorInterface
    private let wireframe: LoginWireframeInterface

    // MARK: - Lifecycle -

    init(view: LoginViewInterface, interactor: LoginInteractorInterface, wireframe: LoginWireframeInterface) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension LoginPresenter: LoginPresenterInterface {
    func authAction(isRegister: Bool, user: UserModel) {
        interactor.requestAuth(type: isRegister ? .reister : .login, user: user) { [weak self] result in
            
            guard let self else { return }
            
            switch result {
            case .success(let success):
                print("#debug success = \(success.token)")
                wireframe.goToCoffeeShops()
            case .failure(let failure):
                print("#debug failure = \(failure.localizedDescription)")
            }
        }
    }
}
