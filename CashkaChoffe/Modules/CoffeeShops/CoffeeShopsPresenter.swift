//
//  CoffeeShopsPresenter.swift
//  CashkaChoffe
//
//  Created by Vlad Ralovich on 10.02.2024.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation

final class CoffeeShopsPresenter {
    
    // MARK: - Private properties -
    
    private var items: CoffeeShopModels = [] {
        didSet {
            view.reloadData()
        }
    }

    private unowned let view: CoffeeShopsViewInterface
    private let interactor: CoffeeShopsInteractorInterface
    private let wireframe: CoffeeShopsWireframeInterface

    // MARK: - Lifecycle -

    init(view: CoffeeShopsViewInterface, interactor: CoffeeShopsInteractorInterface, wireframe: CoffeeShopsWireframeInterface) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension CoffeeShopsPresenter: CoffeeShopsPresenterInterface {
    var numberOfItems: Int {
        items.count
    }
    
    func item(at indexPath: IndexPath) -> CoffeeShopModel {
        items[indexPath.row]
    }
    
    func mainButtonAction() {
        wireframe.openMap()
    }
    
    func getCoffe() {
        interactor.requestCoffe { [weak self] result in
            
            guard let self else { return }
            
            DispatchQueue.main.async {
                switch result {
                case .success(let success):
                    self.items = success
                case .failure(let failure):
                    print("#debug failure = \(failure)")
                }
            }
        }
    }
    
    func didSelectItem(at indexPath: IndexPath) {
        wireframe.openMenu(id: item(at: indexPath).id)
    }
}
